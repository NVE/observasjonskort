import { Rect, Point } from '../../global/interfaces/geom';
import { Variables } from '../../global/interfaces/jeep-columnchart';
import { Status, AxisLength, DataPoint } from '../../global/interfaces/charts';
/**
* @name ColumnChart
* @description
*
*   ColumnChart is a Web Component to display a column chart using SVG Elements.
*
*/
export declare class JeepColumnchart {
    el: HTMLJeepColumnchartElement;
    ctitle: string;
    subtitle: string;
    color: string;
    xtitle: string;
    ytitle: string;
    datapoints: string;
    cstyle: string;
    animation: boolean;
    cborder: boolean;
    delay: string;
    parseTitleProp(newValue: string): void;
    parseSubTitleProp(newValue: string): void;
    parseColorProp(newValue: string): void;
    parseXTitleProp(newValue: string): void;
    parseYTitleProp(newValue: string): void;
    parseDatapointsProp(newValue: string): void;
    parseStyleProp(newValue: string): void;
    parseAnimationProp(newValue: boolean): void;
    parseBorderProp(newValue: boolean): void;
    parseDelayProp(newValue: string): void;
    innerTitle: string;
    innerSubTitle: string;
    innerColor: string;
    innerXTitle: string;
    innerYTitle: string;
    innerDatapoints: Array<DataPoint>;
    innerStyle: string;
    innerAnimation: boolean;
    innerBorder: boolean;
    innerDelay: number;
    status: Status;
    w_width: number;
    w_height: number;
    init(): Promise<void>;
    getStatus(): Promise<Status>;
    renderChart(): Promise<void>;
    getWindowSize(): Promise<Rect>;
    getCssProperties(): Promise<Variables>;
    svg: Element;
    container: HTMLElement;
    chart: HTMLElement;
    borderEl: HTMLElement;
    borderBB: ClientRect;
    axisType: Array<string>;
    window: Window | any;
    document: Document | any;
    root: Element | any;
    _prop: Variables;
    _xmlns: string;
    _titleRect: Rect;
    _chartRect: Rect;
    _legendXRect: Rect;
    _legendYRect: Rect;
    _label: boolean;
    _labelRotate: boolean;
    _x_axy: number;
    _y_axy: number;
    _lenY: AxisLength;
    _lenX: AxisLength;
    _nXlines: number;
    _nYlines: number;
    _xInterval: number;
    _dataColor: boolean;
    _wSize: Rect;
    _update: boolean;
    _yaxis: Rect;
    _showTarget: any;
    _element: any;
    mouseStart: boolean;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): void;
    _init(): Promise<void>;
    _setContainerSize(): void;
    _windowResize(): Promise<void>;
    _getDataPoint(data: string): any;
    _setPropertyValue(name: string, value?: string): string;
    _createTitle(): void;
    _createTitleY(): Element;
    _createTitleX(): Element;
    _labelSize(lenA: AxisLength, rot: number): any;
    _createAxis(): void;
    _createColumn(): void;
    _setAnimation(colEl: Element, col: Rect, duration: string, reverse: boolean): void;
    _initChartRect(): void;
    _waitRemoveLabel(): void;
    _removeLabel(svg: Element): void;
    _handleTouchDown(evt: any): void;
    _handleMouseDown(evt: any): void;
    _handleEventTarget(evt: any, pt: Point): void;
    _handleTouchUp(evt: any): void;
    _handleMouseUp(evt: any): void;
    _renderChart(): Promise<void>;
    render(): any;
}
