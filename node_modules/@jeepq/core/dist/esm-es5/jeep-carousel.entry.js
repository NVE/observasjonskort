var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import { r as registerInstance, c as createEvent, h, g as getElement, H as Host } from './core-f19ae6a4.js';
var JeepCarousel = /** @class */ (function () {
    function class_1(hostRef) {
        registerInstance(this, hostRef);
        /*********************
         * State Definitions *
         *********************/
        this.innerData = [];
        this.pause = false;
        this.backward = false;
        this.forward = true;
        /*********************************
         * Internal Variable Definitions *
         *********************************/
        this._swiper = null; // cannot be Swiper as method init not in @types/swiper
        this._didInit = false;
        this._pagination = false;
        this._navigation = false;
        this._scrollbar = false;
        this._zoom = false;
        this._parallax = false;
        this._thumbs = false;
        this._autoplay = false;
        this._lazy = false;
        this._thumbsOptions = {};
        this._cleanstyles = true;
        this.didLoad = createEvent(this, "jeepCarouselDidLoad", 7);
        this.beforeDestroy = createEvent(this, "jeepCarouselBeforeDestroy", 7);
        this.afterDestroy = createEvent(this, "jeepCarouselAfterDestroy", 7);
        this.tap = createEvent(this, "jeepCarouselTap", 7);
        this.doubleTap = createEvent(this, "jeepCarouselDoubleTap", 7);
        this.slideChange = createEvent(this, "jeepCarouselSlideChange", 7);
        this.willChange = createEvent(this, "jeepCarouselWillChange", 7);
        this.didChange = createEvent(this, "jeepCarouselDidChange", 7);
        this.nextStart = createEvent(this, "jeepCarouselNextStart", 7);
        this.prevStart = createEvent(this, "jeepCarouselPrevStart", 7);
        this.nextEnd = createEvent(this, "jeepCarouselNextEnd", 7);
        this.prevEnd = createEvent(this, "jeepCarouselPrevEnd", 7);
        this.transitionStart = createEvent(this, "jeepCarouselTransitionStart", 7);
        this.transitionEnd = createEvent(this, "jeepCarouselTransitionEnd", 7);
        this.drag = createEvent(this, "jeepCarouselDrag", 7);
        this.reachStart = createEvent(this, "jeepCarouselReachStart", 7);
        this.reachEnd = createEvent(this, "jeepCarouselReachEnd", 7);
        this.touchStart = createEvent(this, "jeepCarouselTouchStart", 7);
        this.touchEnd = createEvent(this, "jeepCarouselTouchEnd", 7);
    }
    class_1.prototype.parseDataProp = function (newValue) {
        var slides = [];
        if (newValue) {
            var inpData = JSON.parse(newValue);
            for (var i = 0; i < inpData.slides.length; i++) {
                var slide = void 0;
                if (inpData.slides[i].slide[0].indexOf("swiper-slide") !== -1) {
                    slide = inpData.slides[i].slide[0];
                }
                else {
                    slide = '<div class="swiper-slide">';
                    if (this._zoom && inpData.slides[i].slide[0].indexOf("<img") === 0)
                        slide += '<div class="swiper-zoom-container">';
                    for (var j = 0; j < inpData.slides[i].slide.length; j++) {
                        slide += inpData.slides[i].slide[j];
                    }
                    if (this._zoom && inpData.slides[i].slide[0].indexOf("<img") === 0)
                        slide += '</div>';
                    if (this._lazy && inpData.slides[i].slide[0].indexOf("swiper-lazy") !== -1) {
                        slide += '<div class="swiper-lazy-preloader"></div>';
                    }
                    slide += '</div>';
                }
                slides = __spreadArrays(slides, [slide]);
            }
        }
        this.innerData = slides;
    };
    class_1.prototype.parseStyleProp = function (newValue) {
        this.innerStyle = newValue ? newValue : null;
    };
    class_1.prototype.parseOptionsProp = function (newValue) {
        return __awaiter(this, void 0, void 0, function () {
            var options;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        options = newValue ? JSON.parse(newValue) : null;
                        if (options !== null) {
                            this._parallax = options.parallax ? true : false;
                            this._thumbs = options.thumbs ? true : false;
                            if (this._thumbs) {
                                if (options.thumbs.swiper) {
                                    if (options.thumbs.swiper.el) {
                                        this._thumbsClass =
                                            options.thumbs.swiper.el.indexOf('.') === 0
                                                ? options.thumbs.swiper.el.substr(1)
                                                : options.thumbs.swiper.el;
                                        delete options.thumbs.swiper.el;
                                        this._thumbsOptions = options.thumbs.swiper;
                                    }
                                    else {
                                        this._thumbsClass = "swiper-container-thumbs";
                                        this._thumbsOptions = options.thumbs.swiper;
                                    }
                                }
                                else {
                                    this._thumbsClass = "swiper-container-thumbs";
                                    this._thumbsOptions = { slidesPerView: 4,
                                        spaceBetween: 10,
                                    };
                                }
                                if (!this._thumbsOptions.watchSlidesProgress)
                                    this._thumbsOptions.watchSlidesProgress = true;
                            }
                            this._lazy = options.lazy ? true : false;
                            this._zoom = options.zoom ? true : false;
                            this._pagination = options.pagination ? true : false;
                            this._navigation = options.navigation ? true : false;
                            this._scrollbar = options.scrollbar ? true : false;
                            this._autoplay = options.autoplay ? true : false;
                        }
                        if (!(this._didInit && options !== null)) return [3 /*break*/, 2];
                        Object.assign(this._swiper.params, options);
                        return [4 /*yield*/, this.update()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this.innerOptions = options;
                        return [2 /*return*/];
                }
            });
        });
    };
    class_1.prototype.parseRtlProp = function (newValue) {
        this.innerRtl = newValue ? newValue : false;
    };
    class_1.prototype.parseParallaxOptions = function (newValue) {
        var parallaxOptions = newValue ? JSON.parse(newValue) : null;
        if (this._parallax) {
            this._parallaxStyle = { "background-image": parallaxOptions.imageUrl };
        }
        else {
            parallaxOptions = null;
        }
        this.innerParallaxOptions = parallaxOptions;
    };
    class_1.prototype.parsePlayControlsProp = function (newValue) {
        this.innerPlayControls = this._autoplay && newValue ? newValue : false;
    };
    class_1.prototype.parseNotCleanStylesProp = function (newValue) {
        var notCleanStyles = newValue ? newValue : false;
        this._cleanstyles = !notCleanStyles;
        this.innerNotCleanStyles = notCleanStyles;
    };
    /**********************
     * Method Definitions *
     **********************/
    /**
     * Init data from properties.
     */
    class_1.prototype.init = function () {
        return Promise.resolve(this._init());
    };
    /**
     * Set the swiper.
     */
    class_1.prototype.setSwiper = function () {
        return Promise.resolve(this._setSwiper());
    };
    /**
     * Update the underlying slider implementation. Call this if you've added or removed
     * child slides.
     */
    class_1.prototype.update = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._swiper.update();
                return [2 /*return*/];
            });
        });
    };
    /**
     * Append new slides
     * slides could be HTMLElement or HTML string with new slide
     * or array with such slides
     */
    class_1.prototype.appendSlide = function (slides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._swiper.appendSlide(slides);
                return [2 /*return*/];
            });
        });
    };
    /**
     * Add new slides to required index
     * slides could be HTMLElement or HTML string with new slide
     * or array with such slides
     */
    class_1.prototype.addSlide = function (index, slides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._swiper.addSlide(index, slides);
                return [2 /*return*/];
            });
        });
    };
    /**
     * Transition to the specified slide.
     */
    class_1.prototype.slideTo = function (index, speed, runCallbacks) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._swiper.slideTo(index, speed, runCallbacks);
                return [2 /*return*/];
            });
        });
    };
    /**
     * Transition to the next slide.
     */
    class_1.prototype.slideNext = function (speed, runCallbacks) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._swiper.slideNext(speed, runCallbacks);
                return [2 /*return*/];
            });
        });
    };
    /**
     * Transition to the previous slide.
     */
    class_1.prototype.slidePrev = function (speed, runCallbacks) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._swiper.slidePrev(speed, runCallbacks);
                return [2 /*return*/];
            });
        });
    };
    /**
     * Get the index of the active slide.
     */
    class_1.prototype.getActiveIndex = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._swiper.activeIndex];
            });
        });
    };
    /**
     * Get the index of the previous slide.
     */
    class_1.prototype.getPreviousIndex = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._swiper.previousIndex];
            });
        });
    };
    /**
     * Get the total number of slides.
     */
    class_1.prototype.length = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._swiper.slides.length];
            });
        });
    };
    /**
     * Get whether or not the current slide is the last slide.
     *
     */
    class_1.prototype.isEnd = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._swiper.isEnd];
            });
        });
    };
    /**
     * Get whether or not the current slide is the first slide.
     */
    class_1.prototype.isBeginning = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._swiper.isBeginning];
            });
        });
    };
    /**
     * Start auto play.
     */
    class_1.prototype.startAutoplay = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this._swiper.autoplay) {
                    this._swiper.autoplay.start();
                }
                return [2 /*return*/];
            });
        });
    };
    /**
     * Stop auto play.
     */
    class_1.prototype.stopAutoplay = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this._swiper.autoplay) {
                    this._swiper.autoplay.stop();
                }
                return [2 /*return*/];
            });
        });
    };
    /**
     * Swiper destroy.
     */
    class_1.prototype.swiperDestroy = function (cleanstyles) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this._swiper) {
                    this._swiper.removeAllSlides();
                    this._swiper.detachEvents();
                    this._swiper.destroy(true, cleanstyles);
                    this.afterDestroy.emit();
                    if (this._thumbs) {
                        this._swiperThumbs.removeAllSlides();
                        this._swiperThumbs.detachEvents();
                        this._swiperThumbs.destroy(true, true);
                    }
                    this._didInit = false;
                    this._swiper = null;
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype.componentWillLoad = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.init()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    class_1.prototype.componentDidLoad = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.setSwiper()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    class_1.prototype.componentDidUnload = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.swiperDestroy(this._cleanstyles)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    class_1.prototype._init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var defParallaxOptions;
            return __generator(this, function (_a) {
                defParallaxOptions = {
                    imageUrl: "url(http://lorempixel.com/900/600/nightlife/2/)",
                    dataSwiperParallax: "-23%"
                };
                this.parseOptionsProp(this.options ? this.options : null);
                this.parseNotCleanStylesProp(this.notcleanstyles ? this.notcleanstyles : false);
                this.parseParallaxOptions(this.parallaxoptions ? this.parallaxoptions : JSON.stringify(defParallaxOptions));
                this.parsePlayControlsProp(this.playcontrols ? true : false);
                this.parseDataProp(this.data ? this.data : null);
                this.parseStyleProp(this.cstyle ? this.cstyle : null);
                this.parseRtlProp(this.rtl ? true : false);
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype._setSwiper = function () {
        return __awaiter(this, void 0, void 0, function () {
            var Swiper, swiperEl, nextStyle, constStyle, prevStyle, _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, import('./swiper-ce3ee4f0.js')];
                    case 1:
                        Swiper = (_b.sent()).Swiper;
                        /**
                         * Thumbs Swiper Container if any
                         */
                        if (this._thumbs) {
                            this._swiperThumbsEl = this.el.querySelector('.' + this._thumbsClass);
                            if (this.innerData && this.innerData.length > 0 && this._swiperThumbsEl !== null) {
                                this._swiperThumbs = new Swiper(this._swiperThumbsEl, this._thumbsOptions);
                                this._swiperThumbs.appendSlide(this.innerData);
                                this._swiperThumbs.update();
                                this.innerOptions.thumbs = { swiper: this._swiperThumbs };
                            }
                        }
                        swiperEl = this.el.querySelector('.swiper-container');
                        this.innerOptions = this.innerOptions !== null ? this.innerOptions : {};
                        this.innerOptions.init = false;
                        if (!(swiperEl !== null)) return [3 /*break*/, 6];
                        this._swiper = new Swiper(swiperEl, this.innerOptions);
                        /**
                         * add some events
                         */
                        this._swiper.on('init', function () {
                            setTimeout(function () {
                                _this._didInit = true;
                                _this.didLoad.emit();
                            }, 20);
                        });
                        this._swiper.on('slideChange', function () { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!this._didInit) return [3 /*break*/, 2];
                                        return [4 /*yield*/, this.update()];
                                    case 1:
                                        _a.sent();
                                        _a.label = 2;
                                    case 2:
                                        this.slideChange.emit();
                                        if (this.innerPlayControls) {
                                            if (this._swiper.isBeginning) {
                                                this.backward = false;
                                            }
                                            else if (this._swiper.isEnd) {
                                                this.pause = false;
                                                this.forward = false;
                                            }
                                            else {
                                                this.backward = true;
                                                this.forward = true;
                                            }
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        }); });
                        this._swiper.on('beforeDestroy', function () {
                            _this.beforeDestroy.emit();
                        });
                        this._swiper.on('tap', function () {
                            _this.tap.emit();
                        });
                        this._swiper.on('doubleTap', function () {
                            _this.doubleTap.emit();
                        });
                        this._swiper.on('slideChangeTransitionStart', function () {
                            _this.willChange.emit();
                        });
                        this._swiper.on('slideChangeTransitionEnd', function () {
                            _this.didChange.emit();
                        });
                        this._swiper.on('slideNextTransitionStart', function () {
                            _this.nextStart.emit();
                        });
                        this._swiper.on('slidePrevTransitionStart', function () {
                            _this.prevStart.emit();
                        });
                        this._swiper.on('slideNextTransitionEnd', function () {
                            _this.nextEnd.emit();
                        });
                        this._swiper.on('slidePrevTransitionEnd', function () {
                            _this.prevEnd.emit();
                        });
                        this._swiper.on('transitionStart', function () {
                            _this.transitionStart.emit();
                        });
                        this._swiper.on('transitionEnd', function () {
                            _this.transitionEnd.emit();
                        });
                        this._swiper.on('sliderMove', function () {
                            _this.drag.emit();
                        });
                        this._swiper.on('reachBeginning', function () {
                            _this.reachStart.emit();
                        });
                        this._swiper.on('reachEnd', function () {
                            _this.reachEnd.emit();
                        });
                        this._swiper.on('touchStart', function () { return __awaiter(_this, void 0, void 0, function () {
                            var _a;
                            return __generator(this, function (_b) {
                                switch (_b.label) {
                                    case 0:
                                        this.touchStart.emit();
                                        _a = this;
                                        return [4 /*yield*/, this._doHide(2500)];
                                    case 1:
                                        _a._initial = _b.sent();
                                        if (this._autoplay && !this._swiper.autoplay.running && !this.innerPlayControls)
                                            this._swiper.autoplay.start();
                                        return [2 /*return*/];
                                }
                            });
                        }); });
                        this._swiper.on('touchEnd', function () {
                            _this.touchEnd.emit();
                        });
                        /**
                         * swiper init
                         */
                        this._swiper.init();
                        if (!(this.innerData && this.innerData.length > 0)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.appendSlide(this.innerData)];
                    case 2:
                        _b.sent();
                        if (this._lazy) {
                            this._swiper.lazy.loadInSlide(0);
                            this._swiper.lazy.loadInSlide(1);
                        }
                        return [4 /*yield*/, this.update()];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4:
                        if (!this.innerPlayControls && this._scrollbar)
                            this._scrollbarEl = swiperEl.querySelector('.swiper-scrollbar');
                        if (!this.innerPlayControls && this._pagination)
                            this._paginationEl = swiperEl.querySelector('.swiper-pagination');
                        if (!this.innerPlayControls && this._navigation) {
                            this._navButtons = swiperEl.querySelector('.swiper-navigation-buttons');
                            this._navPrevEl = this._navButtons.querySelector('.swiper-button-prev');
                            this._navNextEl = this._navButtons.querySelector('.swiper-button-next');
                            nextStyle = "background-image:var(--navigation-next-background,";
                            nextStyle += "url(data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%2027%2044%22%3E%3Cpath%20fill=%22%23007aff%22%20d=%22M27%2022L27%2022L5%2044l-2.1-2.1L22.8%2022L2.9%202.1L5%200z%22/%3E%3C/svg%3E));";
                            nextStyle += "right: var(--navigation-position,10px);";
                            constStyle = "width: var(--navigation-width,27px);height: var(--navigation-height,44px);";
                            constStyle += "background-size: var(--navigation-width,27px) var(--navigation-height,44px);-moz-background-size: var(--navigation-width,27px) var(--navigation-height,44px);";
                            constStyle += "-webkit-background-size: var(--navigation-width,27px) var(--navigation-height,44px);";
                            prevStyle = "background-image:var(--navigation-prev-background,";
                            prevStyle += "url(data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%2027%2044%22%3E%3Cpath%20fill=%22%23007aff%22%20d=%22M0%2022L22%200l2.1%202.1L4.2%2022l19.9%2019.9L22%2044z%22/%3E%3C/svg%3E));";
                            prevStyle += "left: var(--navigation-position,10px);";
                            if (this.innerRtl) {
                                this._navNextEl.setAttribute("style", prevStyle + constStyle);
                                this._navPrevEl.setAttribute("style", nextStyle + constStyle);
                            }
                            else {
                                this._navNextEl.setAttribute("style", nextStyle + constStyle);
                                this._navPrevEl.setAttribute("style", prevStyle + constStyle);
                            }
                        }
                        if (this.playcontrols) {
                            this._playControlsEl = swiperEl.querySelector('.swiper-playcontrols-buttons');
                            this._playBackwardEl = swiperEl.querySelector('.autoplay-button-skip-backward');
                            this._playForwardEl = swiperEl.querySelector('.autoplay-button-skip-forward');
                        }
                        _a = this;
                        return [4 /*yield*/, this._doHide(20)];
                    case 5:
                        _a._initial = _b.sent();
                        if (this._autoplay && !this.innerPlayControls) {
                            this._swiper.autoplay.start();
                        }
                        else {
                            this._swiper.autoplay.stop();
                        }
                        _b.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    class_1.prototype._doVisible = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this._scrollbarEl && this._scrollbarEl.classList.contains('hidden'))
                    this._scrollbarEl.classList.remove('hidden');
                if (this._paginationEl && this._paginationEl.classList.contains('hidden'))
                    this._paginationEl.classList.remove('hidden');
                if (this._navButtons && this._navButtons.classList.contains('hidden'))
                    this._navButtons.classList.remove('hidden');
                if (this._playControlsEl && this._playControlsEl.classList.contains('hidden'))
                    this._playControlsEl.classList.remove('hidden');
                if (this._thumbs && this._swiperThumbsEl && this._swiperThumbsEl.classList.contains('hidden')) {
                    this._swiperThumbsEl.classList.remove('hidden');
                }
                return [2 /*return*/];
            });
        });
    };
    class_1.prototype._doHide = function (duration) {
        return __awaiter(this, void 0, void 0, function () {
            var initial;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        clearTimeout(this._initial);
                        return [4 /*yield*/, this._doVisible()];
                    case 1:
                        _a.sent();
                        initial = setTimeout(function () {
                            if (_this._scrollbarEl)
                                _this._scrollbarEl.classList.add('hidden');
                            if (_this._paginationEl)
                                _this._paginationEl.classList.add('hidden');
                            if (_this._navButtons)
                                _this._navButtons.classList.add('hidden');
                            if (_this._playControlsEl)
                                _this._playControlsEl.classList.add('hidden');
                            if (_this._thumbs && _this._swiperThumbsEl) {
                                _this._swiperThumbsEl.classList.add('hidden');
                            }
                        }, duration);
                        return [2 /*return*/, initial];
                }
            });
        });
    };
    class_1.prototype._handleClick = function (event) {
        if (event.target.classList.contains('autoplay-button-play')) {
            if (this._swiper.isEnd) {
                this._swiper.slideTo(0, 0, false);
                this.forward = true;
            }
            this._swiper.autoplay.start();
            this.pause = true;
        }
        else if (event.target.classList.contains('autoplay-button-skip-backward')) {
            this._swiper.slidePrev(0, false);
        }
        else if (event.target.classList.contains('autoplay-button-skip-forward')) {
            this._swiper.slideNext(0, false);
        }
        else {
            this._swiper.autoplay.stop();
            this.pause = false;
        }
    };
    class_1.prototype.render = function () {
        var _this = this;
        var toRender = [];
        if (this.innerData && this.innerData.length > 0) {
            // swiper-container elements
            var swiperContent = [];
            // add parallax-bg if any
            if (this._parallax) {
                if (this.innerParallaxOptions.dataSwiperParallax) {
                    swiperContent = __spreadArrays(swiperContent, [h("div", { class: "parallax-bg", style: this._parallaxStyle, "data-swiper-parallax": this.innerParallaxOptions.dataSwiperParallax })]);
                }
                if (this.innerParallaxOptions.dataSwiperParallaxX && this.innerParallaxOptions.dataSwiperParallaxY) {
                    swiperContent = __spreadArrays(swiperContent, [h("div", { class: "parallax-bg", style: this._parallaxStyle, "data-swiper-parallax-x": this.innerParallaxOptions.dataSwiperParallaxX, "data-swiper-parallax-y": this.innerParallaxOptions.dataSwiperParallaxY })]);
                }
                else if (this.innerParallaxOptions.dataSwiperParallaxX) {
                    swiperContent = __spreadArrays(swiperContent, [h("div", { class: "parallax-bg", style: this._parallaxStyle, "data-swiper-parallax-x": this.innerParallaxOptions.dataSwiperParallaxX })]);
                }
                else if (this.innerParallaxOptions.dataSwiperParallaxY) {
                    swiperContent = __spreadArrays(swiperContent, [h("div", { class: "parallax-bg", style: this._parallaxStyle, "data-swiper-parallax-y": this.innerParallaxOptions.dataSwiperParallaxY })]);
                }
            }
            // add swiper-wrapper
            swiperContent = __spreadArrays(swiperContent, [h("div", { class: "swiper-wrapper" })]);
            // add swiper-scrollbar if any
            if (!this.innerPlayControls && this._scrollbar) {
                swiperContent = __spreadArrays(swiperContent, [h("div", { class: "swiper-scrollbar" })]);
            }
            // add swiper-pagination if any
            if (!this.innerPlayControls && this._pagination) {
                swiperContent = __spreadArrays(swiperContent, [h("div", { class: "swiper-pagination" })]);
            }
            // add swiper-navigation-buttons id any
            if (!this.innerPlayControls && this._navigation) {
                swiperContent = __spreadArrays(swiperContent, [h("div", { class: "swiper-navigation-buttons" }, h("div", { class: "swiper-button-prev" }), h("div", { class: "swiper-button-next" }))]);
            }
            // add swiper-playcontrols-buttons if any
            if (this.innerPlayControls) {
                swiperContent = __spreadArrays(swiperContent, [h("div", { class: "swiper-playcontrols-buttons" }, this.backward
                        ? h("div", { class: "swiper-playcontrols-button autoplay-button-skip-backward", onClick: function (event) { return _this._handleClick(event); } })
                        : null, this.pause
                        ? h("div", { class: "swiper-playcontrols-button autoplay-button-pause", onClick: function (event) { return _this._handleClick(event); } })
                        : h("div", { class: "swiper-playcontrols-button autoplay-button-play", onClick: function (event) { return _this._handleClick(event); } }), this.forward
                        ? h("div", { class: "swiper-playcontrols-button autoplay-button-skip-forward", onClick: function (event) { return _this._handleClick(event); } })
                        : null)]);
            }
            // swiper-container-thumbs elements if any
            var swiperThumbsContent = [];
            if (this._thumbs) {
                // add swiper-wrapper
                swiperThumbsContent = __spreadArrays(swiperThumbsContent, [h("div", { class: "swiper-wrapper" })]);
            }
            toRender = __spreadArrays(toRender, [h("style", null, this.innerStyle),
                h("div", { class: "container" }, this.innerRtl
                    ? h("div", { class: "swiper-container", dir: 'rtl' }, swiperContent)
                    : h("div", { class: "swiper-container" }, swiperContent), this._thumbs
                    ?
                        h("div", { class: "swiper-container " + this._thumbsClass + " gallery-thumbs" }, swiperThumbsContent)
                    :
                        null)]);
        }
        else {
            toRender = __spreadArrays(toRender, [h("div", { id: 'fake-card' })]);
        }
        return (h(Host, null, toRender));
    };
    Object.defineProperty(class_1, "assetsDirs", {
        get: function () { return ["swiper"]; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_1.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_1, "watchers", {
        get: function () {
            return {
                "data": ["parseDataProp"],
                "cstyle": ["parseStyleProp"],
                "options": ["parseOptionsProp"],
                "rtl": ["parseRtlProp"],
                "parallaxoptions": ["parseParallaxOptions"],
                "playcontrols": ["parsePlayControlsProp"],
                "notcleanstyles": ["parseNotCleanStylesProp"]
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_1, "style", {
        get: function () { return ".swiper-container{position:relative;overflow:hidden;list-style:none}.swiper-container-no-flexbox .swiper-slide{float:left}.swiper-container-vertical>.swiper-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-box-sizing:content-box;box-sizing:content-box}.swiper-container-android .swiper-slide,.swiper-wrapper{-webkit-transform:translateZ(0);transform:translateZ(0)}.swiper-container-multirow>.swiper-wrapper{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.swiper-container-free-mode>.swiper-wrapper{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out;margin:0 auto}.swiper-slide{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;width:100%;height:100%;position:relative;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform}.swiper-slide-invisible-blank{visibility:hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide{height:auto}.swiper-container-autoheight .swiper-wrapper{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-transition-property:height,-webkit-transform;transition-property:height,-webkit-transform;-o-transition-property:transform,height;transition-property:transform,height;transition-property:transform,height,-webkit-transform}.swiper-container-3d{-webkit-perspective:1200px;perspective:1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper{-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-container-3d .swiper-slide-shadow-left{background-image:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(right,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(right,rgba(0,0,0,.5),transparent);background-image:linear-gradient(270deg,rgba(0,0,0,.5),transparent)}.swiper-container-3d .swiper-slide-shadow-right{background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(left,rgba(0,0,0,.5),transparent);background-image:linear-gradient(90deg,rgba(0,0,0,.5),transparent)}.swiper-container-3d .swiper-slide-shadow-top{background-image:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(bottom,rgba(0,0,0,.5),transparent);background-image:linear-gradient(0deg,rgba(0,0,0,.5),transparent)}.swiper-container-3d .swiper-slide-shadow-bottom{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(transparent));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.5),transparent);background-image:-o-linear-gradient(top,rgba(0,0,0,.5),transparent);background-image:linear-gradient(180deg,rgba(0,0,0,.5),transparent)}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper{-ms-touch-action:pan-y;touch-action:pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper{-ms-touch-action:pan-x;touch-action:pan-x}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:27px;height:44px;margin-top:-22px;z-index:10;cursor:pointer;background-size:27px 44px;background-position:50%;background-repeat:no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2027%2044\'%3E%3Cpath%20d%3D\'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z\'%20fill%3D\'%23007aff\'%2F%3E%3C%2Fsvg%3E\");left:10px;right:auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2027%2044\'%3E%3Cpath%20d%3D\'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z\'%20fill%3D\'%23007aff\'%2F%3E%3C%2Fsvg%3E\");right:10px;left:auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2027%2044\'%3E%3Cpath%20d%3D\'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z\'%20fill%3D\'%23ffffff\'%2F%3E%3C%2Fsvg%3E\")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2027%2044\'%3E%3Cpath%20d%3D\'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z\'%20fill%3D\'%23ffffff\'%2F%3E%3C%2Fsvg%3E\")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2027%2044\'%3E%3Cpath%20d%3D\'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z\'%20fill%3D\'%23000000\'%2F%3E%3C%2Fsvg%3E\")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2027%2044\'%3E%3Cpath%20d%3D\'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z\'%20fill%3D\'%23000000\'%2F%3E%3C%2Fsvg%3E\")}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;-webkit-transition:opacity .3s;-o-transition:.3s opacity;transition:opacity .3s;-webkit-transform:translateZ(0);transform:translateZ(0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active,.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullet{width:8px;height:8px;display:inline-block;border-radius:100%;background:#000;opacity:.2}button.swiper-pagination-bullet{border:none;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet-active{opacity:1;background:#007aff}.swiper-container-vertical>.swiper-pagination-bullets{right:10px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:6px 0;display:block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;-webkit-transition:top .2s,-webkit-transform .2s;transition:top .2s,-webkit-transform .2s;-o-transition:.2s transform,.2s top;transition:transform .2s,top .2s;transition:transform .2s,top .2s,-webkit-transform .2s}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);white-space:nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:left .2s,-webkit-transform .2s;transition:left .2s,-webkit-transform .2s;-o-transition:.2s transform,.2s left;transition:transform .2s,left .2s;transition:transform .2s,left .2s,-webkit-transform .2s}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:right .2s,-webkit-transform .2s;transition:right .2s,-webkit-transform .2s;-o-transition:.2s transform,.2s right;transition:transform .2s,right .2s;transition:transform .2s,right .2s,-webkit-transform .2s}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:#007aff;position:absolute;left:0;top:0;width:100%;height:100%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top}.swiper-container-horizontal>.swiper-pagination-progressbar,.swiper-container-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:100%;height:4px;left:0;top:0}.swiper-container-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-container-vertical>.swiper-pagination-progressbar{width:4px;height:100%;left:0;top:0}.swiper-pagination-white .swiper-pagination-bullet-active{background:#fff}.swiper-pagination-progressbar.swiper-pagination-white{background:hsla(0,0%,100%,.25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill{background:#fff}.swiper-pagination-black .swiper-pagination-bullet-active{background:#000}.swiper-pagination-progressbar.swiper-pagination-black{background:rgba(0,0,0,.25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill{background:#000}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:10px;position:relative;-ms-touch-action:none;background:rgba(0,0,0,.1)}.swiper-container-horizontal>.swiper-scrollbar{position:absolute;left:1%;bottom:3px;z-index:50;height:5px;width:98%}.swiper-container-vertical>.swiper-scrollbar{position:absolute;right:3px;top:1%;z-index:50;width:5px;height:98%}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(0,0,0,.5);border-radius:10px;left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}.swiper-zoom-container{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg{max-width:100%;max-height:100%;-o-object-fit:contain;object-fit:contain}.swiper-slide-zoomed{cursor:move}.swiper-lazy-preloader{width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;-webkit-transform-origin:50%;-ms-transform-origin:50%;transform-origin:50%;-webkit-animation:swiper-preloader-spin 1s steps(12,end) infinite;animation:swiper-preloader-spin 1s steps(12,end) infinite}.swiper-lazy-preloader:after{display:block;content:\"\";width:100%;height:100%;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D\'0%200%20120%20120\'%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20xmlns%3Axlink%3D\'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink\'%3E%3Cdefs%3E%3Cline%20id%3D\'l\'%20x1%3D\'60\'%20x2%3D\'60\'%20y1%3D\'7\'%20y2%3D\'27\'%20stroke%3D\'%236c6c6c\'%20stroke-width%3D\'11\'%20stroke-linecap%3D\'round\'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(30%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(60%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(90%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(120%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(150%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.37\'%20transform%3D\'rotate(180%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.46\'%20transform%3D\'rotate(210%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.56\'%20transform%3D\'rotate(240%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.66\'%20transform%3D\'rotate(270%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.75\'%20transform%3D\'rotate(300%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.85\'%20transform%3D\'rotate(330%2060%2C60)\'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\");background-position:50%;background-size:100%;background-repeat:no-repeat}.swiper-lazy-preloader-white:after{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D\'0%200%20120%20120\'%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20xmlns%3Axlink%3D\'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink\'%3E%3Cdefs%3E%3Cline%20id%3D\'l\'%20x1%3D\'60\'%20x2%3D\'60\'%20y1%3D\'7\'%20y2%3D\'27\'%20stroke%3D\'%23fff\'%20stroke-width%3D\'11\'%20stroke-linecap%3D\'round\'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(30%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(60%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(90%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(120%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.27\'%20transform%3D\'rotate(150%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.37\'%20transform%3D\'rotate(180%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.46\'%20transform%3D\'rotate(210%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.56\'%20transform%3D\'rotate(240%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.66\'%20transform%3D\'rotate(270%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.75\'%20transform%3D\'rotate(300%2060%2C60)\'%2F%3E%3Cuse%20xlink%3Ahref%3D\'%23l\'%20opacity%3D\'.85\'%20transform%3D\'rotate(330%2060%2C60)\'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\")}\@-webkit-keyframes swiper-preloader-spin{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\@keyframes swiper-preloader-spin{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.swiper-container .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out}.swiper-container-fade .swiper-slide{pointer-events:none;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity}.swiper-container-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube{overflow:visible}.swiper-container-cube .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0;width:100%;height:100%}.swiper-container-cube .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-cube.swiper-container-rtl .swiper-slide{-webkit-transform-origin:100% 0;-ms-transform-origin:100% 0;transform-origin:100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev{pointer-events:auto;visibility:visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0;width:100%;height:100%;background:#000;opacity:.6;-webkit-filter:blur(50px);filter:blur(50px);z-index:0}.swiper-container-flip{overflow:visible}.swiper-container-flip .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-container-flip .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-coverflow .swiper-wrapper{-ms-perspective:1200px}#fake-card{margin:1.5em;height:400px;background-image:linear-gradient(100deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.5) 50%,hsla(0,0%,100%,0) 80%),linear-gradient(#d3d3d3 20px,transparent 0),linear-gradient(#d3d3d3 20px,transparent 0),linear-gradient(#d3d3d3 100px,transparent 0);background-size:100% 220px;background-position:10px 0,10px 120px,10px 160px}.container{position:absolute;top:0;bottom:0;right:0;left:0;overflow:hidden;background-color:transparent}.swiper-container{margin:0 auto;padding:0;background-color:var(--container-background-color,#eee);top:var(--swiper-container-top,auto)!important;left:var(--swiper-container-left,auto)!important;position:var(--swiper-container-position,relative)!important;width:var(--swiper-container-width,100%)!important;height:var(--swiper-container-height,100%)!important;z-index:1}.parallax-bg{position:var(--parallax-position,absolute)!important;left:var(--parallax-left,0)!important;top:var(--parallax-top,0)!important;width:var(--parallax-width,130%)!important;height:var(--parallax-height,100%)!important;-webkit-background-size:var(--parallax-background-size,cover)!important;background-size:var(--parallax-background-size,cover)!important;background-position:var(--parallax-background-position,center)!important}.swiper-container .swiper-wrapper{position:relative;width:100%;height:100%;z-index:1}.swiper-container .swiper-slide{-ms-flex-negative:0;flex-shrink:0;color:var(--swiper-slide-color,#000)!important;width:var(--swiper-slide-width,100%);height:var(--swiper-slide-height,100%);padding:var(--swiper-slide-padding,0);-webkit-box-sizing:border-box;box-sizing:border-box;top:var(--swiper-slide-top,auto)!important;position:relative;display:var(--swiper-slide-display,initial);-ms-flex-direction:var(--swiper-slide-flex-direction,column);flex-direction:var(--swiper-slide-flex-direction,column);-ms-flex-align:var(--swiper-slide-align-items,initial);align-items:var(--swiper-slide-align-items,initial);-ms-flex-pack:var(--swiper-slide-justify-content,initial);justify-content:var(--swiper-slide-justify-content,initial)}.swiper-pagination{visibility:visible}.swiper-pagination-bullet{width:var(--bullet-diameter,15px)!important;height:var(--bullet-diameter,15px)!important;opacity:var(--bullet-opacity,.5)!important;background:var(--bullet-background,#000)!important}.swiper-pagination-bullet-active{opacity:var(--bullet-active-opacity,1)!important;background:var(--bullet-active-background,#007aff)!important}.gallery-thumbs,.swipper-button-next,.swipper-button-prev{visibility:visible}.gallery-thumbs{position:absolute!important;top:var(--gallery-thumbs-top,80%)!important;height:var(--gallery-thumbs-height,20%)!important;padding:var(--gallery-thumbs-padding,10px 0);background-color:var(--gallery-thumbs-background-color,#000);-webkit-box-sizing:border-box;box-sizing:border-box;z-index:10}.gallery-thumbs .swiper-slide{width:var(--gallery-thumbs-width,25%);height:100%;opacity:var(--galery-thumbs-opacity,.4)}.gallery-thumbs .swiper-slide-thumb-active{opacity:1}.gallery-thumbs .swiper-slide img{width:100%;height:auto}.hidden{visibility:hidden}.autoplay-button-pause{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20512%20512%22%3E%3Cpath%20d=%22M199.9%20416h-63.8c-4.5%200-8.1-3.6-8.1-8V104c0-4.4%203.6-8%208.1-8h63.8c4.5%200%208.1%203.6%208.1%208v304c0%204.4-3.6%208-8.1%208zM375.9%20416h-63.8c-4.5%200-8.1-3.6-8.1-8V104c0-4.4%203.6-8%208.1-8h63.8c4.5%200%208.1%203.6%208.1%208v304c0%204.4-3.6%208-8.1%208z%22/%3E%3C/svg%3E\")}.autoplay-button-pause,.autoplay-button-play{width:calc(var(--playcontrols-width,20px) * 1.4)!important;height:calc(var(--playcontrols-height,20px) * 1.4)!important;padding-bottom:0!important}.autoplay-button-play{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20512%20512%22%3E%3Cpath%20d=%22M128%20104.3v303.4c0%206.4%206.5%2010.4%2011.7%207.2l240.5-151.7c5.1-3.2%205.1-11.1%200-14.3L139.7%2097.2c-5.2-3.3-11.7.7-11.7%207.1z%22/%3E%3C/svg%3E\")}.autoplay-button-skip-forward{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20512%20512%22%3E%3Cpath%20d=%22M337%20100v137.8L108.1%2098.1C102.7%2095%2096%2098.8%2096%20105v302c0%206.2%206.7%2010%2012.1%206.9L337%20274.2V412c0%202.2%201.8%204%204%204h71c2.2%200%204-1.8%204-4V100c0-2.2-1.8-4-4-4h-71c-2.2%200-4%201.8-4%204z%22/%3E%3C/svg%3E\")}.autoplay-button-skip-backward{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20512%20512%22%3E%3Cpath%20d=%22M175%20100v137.8L403.9%2098.1c5.3-3.1%2012.1.7%2012.1%206.9v302c0%206.2-6.7%2010-12.1%206.9L175%20274.2V412c0%202.2-1.8%204-4%204h-71c-2.2%200-4-1.8-4-4V100c0-2.2%201.8-4%204-4h71c2.2%200%204%201.8%204%204z%22/%3E%3C/svg%3E\")}.swiper-playcontrols-buttons{position:absolute;bottom:10px;left:0;width:100%;text-align:center;z-index:100}.swiper-playcontrols-button{display:inline-block;width:var(--playcontrols-width,20px);height:var(--playcontrols-height,20px);padding-bottom:calc(var(--playcontrols-height,20px) * .2)}.swiper-pagination-progressbar{background:var(--progress-bar-background-color,rgba(0,0,0,.25))!important}.swiper-container-horizontal>.swiper-pagination-progressbar,.swiper-container-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-container-vertical>.swiper-pagination-progressbar,.swiper-container-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:var(--progress-bar-width,100%)!important;height:var(--progress-bar-height,.5%)!important;top:var(--progress-bar-top,0)!important;left:var(--progress-bar-left,0)!important}.swiper-pagination-progressbar-fill{background:var(--progress-bar-color,#007aff)!important}.swiper-pagination-fraction{font-family:var(--fraction-font-family,\"Times New Roman\",Times,serif)!important;font-size:var(--fraction-font-size,15px)!important;font-weight:var(--fraction-font-weight,normal)!important;font-style:var(--fraction-font-style,normal)!important;color:var(--fraction-text-color,#000)!important}.swiper-scrollbar-drag{background:var(--scrollbar-color,rgba(0,0,0,.5))!important}.swiper-container-horizontal>.swiper-scrollbar,.swiper-container-vertical>.swiper-scrollbar{left:var(--scrollbar-left,1%)!important;bottom:var(--scrollbar-bottom,3px)!important;height:var(--scrollbar-height,5px)!important;width:var(--scrollbar-width,98%)!important;background:var(--scrollbar-background-color,rgba(0,0,0,.1))!important}"; },
        enumerable: true,
        configurable: true
    });
    return class_1;
}());
export { JeepCarousel as jeep_carousel };
