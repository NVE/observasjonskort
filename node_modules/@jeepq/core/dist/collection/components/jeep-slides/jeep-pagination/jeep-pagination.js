import { h, Host } from "@stencil/core";
export class JeepPagination {
    constructor() {
        this.visibility = 'visible';
        this.nbItems = 0;
        this.activeIndex = 0;
    }
    //*****************************
    //* Watch on Property Changes *
    //*****************************
    parseNDisplayProp(newValue) {
        if (newValue) {
            let val = newValue;
            this.innerNDisplay = val % 2 ? val : val + 1;
            this._delta = Math.floor(this.innerNDisplay / 2);
        }
    }
    parseDirectionProp(newValue) {
        const dirs = ["horizontal", "vertical"];
        this.innerDirection = dirs.includes(newValue) ? newValue : "horizontal";
    }
    parseClickableProp(newValue) {
        this.innerClickable = newValue ? newValue : false;
    }
    //*******************************
    //* Listen to Event Definitions *
    //*******************************
    //**********************
    //* Method Definitions *
    //**********************
    /**
     * Init data from properties.
     */
    init() {
        return Promise.resolve(this._init());
    }
    /**
     * Set the Pagination Visibility (visible/hidden)
     */
    setJeepPaginationVisibility(state) {
        if (state && state.visibility) {
            this.visibility = state.visibility;
        }
        return;
    }
    /**
     * Set the Pagination Slides Number
     */
    setJeepPaginationSlidesNumber(state) {
        if (state && state.slides) {
            this.nbItems = state.slides;
        }
        return;
    }
    /**
     * Set the Pagination Active Index
     */
    setJeepPaginationActiveIndex(state) {
        if (state && state.activeIndex) {
            this.activeIndex = Number(state.activeIndex);
        }
        return;
    }
    /**
     * Get the Pagination Number of bullets displayed
     */
    async getJeepPaginationBulletNumber() {
        return this.innerNDisplay;
    }
    async componentWillLoad() {
        await this.init();
    }
    async _init() {
        this._element = this.el.shadowRoot;
        this.parseNDisplayProp(this.ndisplay ? this.ndisplay : 5);
        this.parseDirectionProp(this.direction ? this.direction : "horizontal");
        this.parseClickableProp(this.clickable ? this.clickable : false);
        return;
    }
    _handleClick(i) {
        if (this.innerClickable) {
            this.onPaginationIndex.emit({ index: i.toString() });
        }
    }
    _setPaginationBullets(nbItems) {
        let bullets = [];
        let initIndex = this.activeIndex - this._delta;
        const classname = `pagination-bullet pagination-bullet-${this.innerDirection}`;
        for (let i = 0; i < this.innerNDisplay; i++) {
            let appliedClass = classname;
            if (initIndex + i < 0) {
                appliedClass = `${classname} hidden-bullet`;
            }
            else if (initIndex + i === this.activeIndex) {
                appliedClass = `${classname} active-bullet`;
            }
            else if (initIndex + i > nbItems - 1) {
                appliedClass = `${classname} hidden-bullet`;
            }
            bullets = [...bullets,
                h("span", { class: appliedClass, onClick: () => this._handleClick(initIndex + i) })];
        }
        //        this.initialIndex = initIndex;
        return bullets;
    }
    render() {
        const paginationBullets = this.nbItems > 0 ? this._setPaginationBullets(this.nbItems) : [];
        const containerClass = `pagination-container pagination-container-${this.innerDirection}`;
        return (h(Host, null,
            h("div", { class: containerClass }, this.visibility === "visible"
                ?
                    h("div", { class: "pagination-wrapper" }, paginationBullets)
                : null)));
    }
    static get is() { return "jeep-pagination"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["jeep-pagination.css"]
    }; }
    static get styleUrls() { return {
        "$": ["jeep-pagination.css"]
    }; }
    static get properties() { return {
        "ndisplay": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The pagination number of items display"
            },
            "attribute": "ndisplay",
            "reflect": false
        },
        "direction": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The pagination direction"
            },
            "attribute": "direction",
            "reflect": false
        },
        "clickable": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The pagination clickable option"
            },
            "attribute": "clickable",
            "reflect": false
        }
    }; }
    static get states() { return {
        "innerNDisplay": {},
        "innerDirection": {},
        "innerClickable": {},
        "visibility": {},
        "nbItems": {},
        "activeIndex": {}
    }; }
    static get events() { return [{
            "method": "onPaginationIndex",
            "name": "jeepPaginationIndex",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Emitted when a pagination bullet was clicked"
            },
            "complexType": {
                "original": "PaginationIndex",
                "resolved": "PaginationIndex",
                "references": {
                    "PaginationIndex": {
                        "location": "import",
                        "path": "../../../global/interfaces/jeep-slides"
                    }
                }
            }
        }]; }
    static get methods() { return {
        "init": {
            "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "Init data from properties.",
                "tags": []
            }
        },
        "setJeepPaginationVisibility": {
            "complexType": {
                "signature": "(state: any) => Promise<void>",
                "parameters": [{
                        "tags": [],
                        "text": ""
                    }],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "Set the Pagination Visibility (visible/hidden)",
                "tags": []
            }
        },
        "setJeepPaginationSlidesNumber": {
            "complexType": {
                "signature": "(state: any) => Promise<void>",
                "parameters": [{
                        "tags": [],
                        "text": ""
                    }],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "Set the Pagination Slides Number",
                "tags": []
            }
        },
        "setJeepPaginationActiveIndex": {
            "complexType": {
                "signature": "(state: any) => Promise<void>",
                "parameters": [{
                        "tags": [],
                        "text": ""
                    }],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "Set the Pagination Active Index",
                "tags": []
            }
        },
        "getJeepPaginationBulletNumber": {
            "complexType": {
                "signature": "() => Promise<number>",
                "parameters": [],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<number>"
            },
            "docs": {
                "text": "Get the Pagination Number of bullets displayed",
                "tags": []
            }
        }
    }; }
    static get elementRef() { return "el"; }
    static get watchers() { return [{
            "propName": "ndisplay",
            "methodName": "parseNDisplayProp"
        }, {
            "propName": "direction",
            "methodName": "parseDirectionProp"
        }, {
            "propName": "clickable",
            "methodName": "parseClickableProp"
        }]; }
}
